on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ruby:
          - ruby-head
          - jruby-head
        rails:
          - 7
          - master
        rails_api_only:
          - 0
          - 1
        jruby_ar_jdbc_adapter_version:
          - v70.0.pre
        experimental:
          - true
        include:
          - ruby: 2.7
            rails: 5
            rails_api_only: 0
            experimental: false
          - ruby: 2.7
            rails: 5
            rails_api_only: 1
            experimental: false
          - ruby: 2.7
            rails: 6
            rails_api_only: 0
            experimental: false
          - ruby: 2.7
            rails: 6
            rails_api_only: 1
            experimental: false
          - ruby: 3.1
            rails: 7
            rails_api_only: 0
            experimental: false
          - ruby: 3.1
            rails: 7
            rails_api_only: 1
            experimental: false
          - ruby: jruby-9.1
            rails: 5
            rails_api_only: 0
            jruby_ar_jdbc_adapter_version: v52.8
            experimental: false
          - ruby: jruby-9.2
            rails: 6
            rails_api_only: 0
            jruby_ar_jdbc_adapter_version: v60.0
            experimental: false

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true
      env:
        RAILS_VERSION: ${{ matrix.rails }}
        RAILS_API_ONLY: ${{ matrix.rails_api_only }}
        JRUBY_AR_JDBC_ADAPTER_VERSION: ${{ matrix.jruby_ar_jdbc_adapter_version }}
    - run: bundle exec rake
      env:
        RAILS_VERSION: ${{ matrix.rails }}
        RAILS_API_ONLY: ${{ matrix.rails_api_only }}
        JRUBY_AR_JDBC_ADAPTER_VERSION: ${{ matrix.jruby_ar_jdbc_adapter_version }}
